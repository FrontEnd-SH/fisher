#!/usr/bin/env node

var fisher = require ('../index'),
    path   = require ('path');

var log = console.log, interval, root = process.argv[2];

if (typeof root !== 'undefined') {
	if (process.argv[3]) interval = parseInt(process.argv[3], 10);
    
    var root = path.resolve(process.cwd(), root).replace(/\\/g, '/');

    log('start watch ' + root);

	fisher.watch(root, {interval: interval})
		.on('update', function (n) {
			var str = n.stats.isFile() ? 'file' : ' dir';
			log(' ~ update ' + str + ': ' + n.filepath)
		})
		.on('delete', function (n) {
			var str = n.stats.isFile() ? 'file' : 'dir';
			log(' - delete ' + str + ': ' + n.filepath)
		})
		.on('create', function (n) {
			var str = n.stats.isFile() ? 'file' : 'dir';
			log(' + create ' + str + ': ' + n.filepath)
		});
    

    process.on('exit', function () {
        fisher.stop();
        log('end watch ' + root);
    });
    process.on('SIGNAL', function () {
        fisher.stop();
        log('end watch ' + root);
    });

    setInterval(function () {}, 1000000); // do nothing

} else {
    log('')
    log('Usage: watch <path> [interval]')
    log('')
    log('watch file or directory change accurately')
    log('')
}
