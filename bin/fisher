#!/usr/bin/env node

var fisher = require ('../index'),
    path   = require ('path');

var log = console.log, interval = 1500, root = process.argv[2];

var colors = {
        red:    ['\x1B[31m', '\x1B[39m'],
        green:  ['\x1B[32m', '\x1B[39m'],
        blue:   ['\x1B[34m', '\x1B[39m'],
        white:  ['\x1B[37m', '\x1B[39m'],
        gray:   ['\x1B[90m', '\x1B[39m']
    };
function c(str, color) { return colors[color][0] + str + colors[color][1]; }

if (typeof root !== 'undefined') {
    var root = path.resolve(process.cwd(), root).replace(/\\/g, '/'), 
        watcher,
        i = 3, l, patterns;

	if (/\d+/.test(process.argv[3])) {
        interval = parseInt(process.argv[3], 10);
        i = 4;
    }
    while (process.argv[i]) {
        if (!patterns) patterns = [];
        patterns.push({pattern: process.argv[i]});
        i++;
    }

    log(c('start watch ', 'gray') + root);

	watcher = fisher.watch(root, {interval: interval, exclude: patterns})
		.on('update', function (n) {
			var str = n.stats.isFile() ? 'file' : ' dir ';
			log(c(' ~ update ' + str, 'blue') + ': ' + n.filepath)
		})
		.on('delete', function (n) {
			var str = n.stats.isFile() ? 'file' : 'dir';
			log(c(' - delete ' + str, 'red') + ': ' + n.filepath)
		})
		.on('create', function (n) {
			var str = n.stats.isFile() ? 'file' : 'dir';
			log(c(' + create ' + str,'green') + ': ' + n.filepath)
		});
    

    process.on('SIGINT', function () { graceful_exit(); });

    function graceful_exit () {
        watcher.stop();
        log('');
        log(c('end watch ','gray') + root);
        process.exit(0);
    }

    setInterval(function () {}, 1000000); // do nothing

} else {
    log('')
    log(' ' + c('Usage:','blue') + ' fisher <path> [interval]')
    log('')
    log('        watch file or directory change accurately')
    log('')
}
